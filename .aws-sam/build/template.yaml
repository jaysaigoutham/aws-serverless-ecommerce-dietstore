AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'aws-serverless-ecommerce-dietstore

  Sample SAM Template for aws-serverless-ecommerce-dietstore

  '
Globals:
  Function:
    Timeout: 3
Resources:
  AddProduct:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: AddProduct
      CodeUri: AddProduct
      Handler: AddProduct.handler
      Runtime: nodejs12.x
      Policies:
      - AmazonDynamoDBFullAccess
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /product
            Method: POST
  ListProducts:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ListProducts
      CodeUri: ListProducts
      Handler: ListProducts.handler
      Runtime: nodejs12.x
      Policies:
      - AmazonDynamoDBFullAccess
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /product
            Method: GET
  AddToCart:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: AddToCart
      CodeUri: AddToCart
      Handler: AddToCart.handler
      Runtime: nodejs12.x
      Policies:
      - AmazonDynamoDBFullAccess
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /shoppingcart
            Method: POST
  RemoveFromCart:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: RemoveFromCart
      CodeUri: RemoveFromCart
      Handler: RemoveFromCart.handler
      Runtime: nodejs12.x
      Policies:
      - AmazonDynamoDBFullAccess
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /shoppingcart
            Method: DELETE
  ProceedCheckout:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ProceedCheckout
      CodeUri: ProceedCheckout
      Handler: ProceedCheckout.handler
      Runtime: nodejs12.x
      Policies:
      - AmazonDynamoDBFullAccess
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /checkout
            Method: POST
  HelloWorldFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: HelloWorldFunction
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /hello
            Method: get
  Product:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Product
      AttributeDefinitions:
      - AttributeName: ProductID
        AttributeType: S
      KeySchema:
      - AttributeName: ProductID
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      StreamSpecification:
        StreamViewType: NEW_IMAGE
  ShoppingCart:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ShoppingCart
      AttributeDefinitions:
      - AttributeName: ShoppingCartID
        AttributeType: S
      KeySchema:
      - AttributeName: ShoppingCartID
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      StreamSpecification:
        StreamViewType: NEW_IMAGE
  OrderTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Order
      AttributeDefinitions:
      - AttributeName: OrderID
        AttributeType: S
      KeySchema:
      - AttributeName: OrderID
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      StreamSpecification:
        StreamViewType: NEW_IMAGE
Outputs:
  HelloWorldApi:
    Description: API Gateway endpoint URL for Prod stage for Hello World function
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/
  HelloWorldFunction:
    Description: Hello World Lambda Function ARN
    Value:
      Fn::GetAtt:
      - HelloWorldFunction
      - Arn
  HelloWorldFunctionIamRole:
    Description: Implicit IAM Role created for Hello World function
    Value:
      Fn::GetAtt:
      - HelloWorldFunctionRole
      - Arn
